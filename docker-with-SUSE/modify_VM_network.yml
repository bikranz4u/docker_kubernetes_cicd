---
# Sample Ansible Playbook to reconfigure network of  a VM

- hosts: test
  remote_user: root
  vars:
    IP_TO_REPLACE: '192.168.1.15'
    IP_TO_REPLACE_WITH: '192.168.1.16'
    HOSTNAME_TO_REPLACE: 'devops-15'
    HOSTNAME_TO_REPLACE_WITH: 'devops-16'

  tasks:
  - name: modifying the ifcfg-BR0 file 
    replace:
      path: "{{ item.path }}"
      regexp: "{{ item.regexp1 }}"
      replace: "{{ item.replace }}"
      backup: yes
    with_items:
      - { path: '/etc/sysconfig/network/ifcfg-br0', regexp1: "{{ IP_TO_REPLACE }}", replace: "{{ IP_TO_REPLACE_WITH }}" }
      - { path: '/etc/hosts', regexp1: "{{ IP_TO_REPLACE }}", replace: "{{ IP_TO_REPLACE_WITH }}" }
      - { path: '/etc/hosts', regexp1: "{{ HOSTNAME_TO_REPLACE }}", replace: "{{ HOSTNAME_TO_REPLACE_WITH }}" }
      - { path: '/etc/hostname', regexp1: "{{ HOSTNAME_TO_REPLACE }}", replace: "{{ HOSTNAME_TO_REPLACE_WITH }}" }


    register: task_result

  - name: Reboot immediately the server to take latest changes
    shell: "sleep 15 && reboot"
    async: 1
    poll: 0
    when: task_result is changed

  - name: Wait for the reboot to complete if there was a changed
    wait_for:
      port: 22
      host: '{{ (ansible_ssh_host |default(ansible_host))|default(inventory_hostname) }}'
      search_regex: OpenSSH
      delay: 10
      timeout: 90
    when: task_result is changed

  - name: Check the uptime of the server
    shell: "uptime"
    register: uptime_result

  - debug: var=uptime_result
